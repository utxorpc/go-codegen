// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: utxorpc/v1alpha/watch/watch.proto

package watch

import (
	cardano "github.com/utxorpc/go-codegen/utxorpc/v1alpha/cardano"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a reference to a specific block by a chosen combination of fields
type BlockRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`     // Height or slot number (depending on the blockchain)
	Hash          []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`      // Hash of the content of the block
	Height        uint64                 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // Block height
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockRef) Reset() {
	*x = BlockRef{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRef) ProtoMessage() {}

func (x *BlockRef) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRef.ProtoReflect.Descriptor instead.
func (*BlockRef) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{0}
}

func (x *BlockRef) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlockRef) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockRef) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AnyChainBlock struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NativeBytes []byte                 `protobuf:"bytes,1,opt,name=native_bytes,json=nativeBytes,proto3" json:"native_bytes,omitempty"` // Original bytes as defined by the chain
	// Types that are valid to be assigned to Chain:
	//
	//	*AnyChainBlock_Cardano
	Chain         isAnyChainBlock_Chain `protobuf_oneof:"chain"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyChainBlock) Reset() {
	*x = AnyChainBlock{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyChainBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainBlock) ProtoMessage() {}

func (x *AnyChainBlock) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainBlock.ProtoReflect.Descriptor instead.
func (*AnyChainBlock) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{1}
}

func (x *AnyChainBlock) GetNativeBytes() []byte {
	if x != nil {
		return x.NativeBytes
	}
	return nil
}

func (x *AnyChainBlock) GetChain() isAnyChainBlock_Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *AnyChainBlock) GetCardano() *cardano.Block {
	if x != nil {
		if x, ok := x.Chain.(*AnyChainBlock_Cardano); ok {
			return x.Cardano
		}
	}
	return nil
}

type isAnyChainBlock_Chain interface {
	isAnyChainBlock_Chain()
}

type AnyChainBlock_Cardano struct {
	Cardano *cardano.Block `protobuf:"bytes,2,opt,name=cardano,proto3,oneof"` // A parsed Cardano block.
}

func (*AnyChainBlock_Cardano) isAnyChainBlock_Chain() {}

// Represents a tx pattern from any supported blockchain.
type AnyChainTxPattern struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Chain:
	//
	//	*AnyChainTxPattern_Cardano
	Chain         isAnyChainTxPattern_Chain `protobuf_oneof:"chain"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyChainTxPattern) Reset() {
	*x = AnyChainTxPattern{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyChainTxPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainTxPattern) ProtoMessage() {}

func (x *AnyChainTxPattern) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainTxPattern.ProtoReflect.Descriptor instead.
func (*AnyChainTxPattern) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{2}
}

func (x *AnyChainTxPattern) GetChain() isAnyChainTxPattern_Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *AnyChainTxPattern) GetCardano() *cardano.TxPattern {
	if x != nil {
		if x, ok := x.Chain.(*AnyChainTxPattern_Cardano); ok {
			return x.Cardano
		}
	}
	return nil
}

type isAnyChainTxPattern_Chain interface {
	isAnyChainTxPattern_Chain()
}

type AnyChainTxPattern_Cardano struct {
	Cardano *cardano.TxPattern `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"` // A Cardano tx pattern.
}

func (*AnyChainTxPattern_Cardano) isAnyChainTxPattern_Chain() {}

// Represents a simple tx predicate that can composed to create more complex ones
type TxPredicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *AnyChainTxPattern     `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`              // Predicate is true if tx exhibits pattern.
	Not           []*TxPredicate         `protobuf:"bytes,2,rep,name=not,proto3" json:"not,omitempty"`                  // Predicate is true if tx doesn't exhibit pattern.
	AllOf         []*TxPredicate         `protobuf:"bytes,3,rep,name=all_of,json=allOf,proto3" json:"all_of,omitempty"` // Predicate is true if tx exhibits all of the patterns.
	AnyOf         []*TxPredicate         `protobuf:"bytes,4,rep,name=any_of,json=anyOf,proto3" json:"any_of,omitempty"` // Predicate is true if tx exhibits any of the patterns.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxPredicate) Reset() {
	*x = TxPredicate{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPredicate) ProtoMessage() {}

func (x *TxPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPredicate.ProtoReflect.Descriptor instead.
func (*TxPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{3}
}

func (x *TxPredicate) GetMatch() *AnyChainTxPattern {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *TxPredicate) GetNot() []*TxPredicate {
	if x != nil {
		return x.Not
	}
	return nil
}

func (x *TxPredicate) GetAllOf() []*TxPredicate {
	if x != nil {
		return x.AllOf
	}
	return nil
}

func (x *TxPredicate) GetAnyOf() []*TxPredicate {
	if x != nil {
		return x.AnyOf
	}
	return nil
}

// Request to watch transactions from the chain based on a set of predicates.
type WatchTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Predicate     *TxPredicate           `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`                  // Predicate to filter transactions by.
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields.
	Intersect     []*BlockRef            `protobuf:"bytes,3,rep,name=intersect,proto3" json:"intersect,omitempty"`                  // List of block references to find the intersection.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTxRequest) Reset() {
	*x = WatchTxRequest{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTxRequest) ProtoMessage() {}

func (x *WatchTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTxRequest.ProtoReflect.Descriptor instead.
func (*WatchTxRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{4}
}

func (x *WatchTxRequest) GetPredicate() *TxPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *WatchTxRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *WatchTxRequest) GetIntersect() []*BlockRef {
	if x != nil {
		return x.Intersect
	}
	return nil
}

// Represents a transaction from any supported blockchain.
type AnyChainTx struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Chain:
	//
	//	*AnyChainTx_Cardano
	Chain         isAnyChainTx_Chain `protobuf_oneof:"chain"`
	Block         *AnyChainBlock     `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"` // Block containing the transaction
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyChainTx) Reset() {
	*x = AnyChainTx{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyChainTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainTx) ProtoMessage() {}

func (x *AnyChainTx) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainTx.ProtoReflect.Descriptor instead.
func (*AnyChainTx) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{5}
}

func (x *AnyChainTx) GetChain() isAnyChainTx_Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *AnyChainTx) GetCardano() *cardano.Tx {
	if x != nil {
		if x, ok := x.Chain.(*AnyChainTx_Cardano); ok {
			return x.Cardano
		}
	}
	return nil
}

func (x *AnyChainTx) GetBlock() *AnyChainBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

type isAnyChainTx_Chain interface {
	isAnyChainTx_Chain()
}

type AnyChainTx_Cardano struct {
	Cardano *cardano.Tx `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"` // A Cardano transaction.
}

func (*AnyChainTx_Cardano) isAnyChainTx_Chain() {}

// Response containing the matching chain transactions.
type WatchTxResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*WatchTxResponse_Apply
	//	*WatchTxResponse_Undo
	Action        isWatchTxResponse_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTxResponse) Reset() {
	*x = WatchTxResponse{}
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTxResponse) ProtoMessage() {}

func (x *WatchTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_watch_watch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTxResponse.ProtoReflect.Descriptor instead.
func (*WatchTxResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP(), []int{6}
}

func (x *WatchTxResponse) GetAction() isWatchTxResponse_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *WatchTxResponse) GetApply() *AnyChainTx {
	if x != nil {
		if x, ok := x.Action.(*WatchTxResponse_Apply); ok {
			return x.Apply
		}
	}
	return nil
}

func (x *WatchTxResponse) GetUndo() *AnyChainTx {
	if x != nil {
		if x, ok := x.Action.(*WatchTxResponse_Undo); ok {
			return x.Undo
		}
	}
	return nil
}

type isWatchTxResponse_Action interface {
	isWatchTxResponse_Action()
}

type WatchTxResponse_Apply struct {
	Apply *AnyChainTx `protobuf:"bytes,1,opt,name=apply,proto3,oneof"` // Apply this transaction.
}

type WatchTxResponse_Undo struct {
	Undo *AnyChainTx `protobuf:"bytes,2,opt,name=undo,proto3,oneof"` // Undo this transaction.
}

func (*WatchTxResponse_Apply) isWatchTxResponse_Action() {}

func (*WatchTxResponse_Undo) isWatchTxResponse_Action() {}

var File_utxorpc_v1alpha_watch_watch_proto protoreflect.FileDescriptor

const file_utxorpc_v1alpha_watch_watch_proto_rawDesc = "" +
	"\n" +
	"!utxorpc/v1alpha/watch/watch.proto\x12\x15utxorpc.v1alpha.watch\x1a google/protobuf/field_mask.proto\x1a%utxorpc/v1alpha/cardano/cardano.proto\"J\n" +
	"\bBlockRef\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x04R\x06height\"w\n" +
	"\rAnyChainBlock\x12!\n" +
	"\fnative_bytes\x18\x01 \x01(\fR\vnativeBytes\x12:\n" +
	"\acardano\x18\x02 \x01(\v2\x1e.utxorpc.v1alpha.cardano.BlockH\x00R\acardanoB\a\n" +
	"\x05chain\"\\\n" +
	"\x11AnyChainTxPattern\x12>\n" +
	"\acardano\x18\x01 \x01(\v2\".utxorpc.v1alpha.cardano.TxPatternH\x00R\acardanoB\a\n" +
	"\x05chain\"\xf9\x01\n" +
	"\vTxPredicate\x12>\n" +
	"\x05match\x18\x01 \x01(\v2(.utxorpc.v1alpha.watch.AnyChainTxPatternR\x05match\x124\n" +
	"\x03not\x18\x02 \x03(\v2\".utxorpc.v1alpha.watch.TxPredicateR\x03not\x129\n" +
	"\x06all_of\x18\x03 \x03(\v2\".utxorpc.v1alpha.watch.TxPredicateR\x05allOf\x129\n" +
	"\x06any_of\x18\x04 \x03(\v2\".utxorpc.v1alpha.watch.TxPredicateR\x05anyOf\"\xcc\x01\n" +
	"\x0eWatchTxRequest\x12@\n" +
	"\tpredicate\x18\x01 \x01(\v2\".utxorpc.v1alpha.watch.TxPredicateR\tpredicate\x129\n" +
	"\n" +
	"field_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x12=\n" +
	"\tintersect\x18\x03 \x03(\v2\x1f.utxorpc.v1alpha.watch.BlockRefR\tintersect\"\x8a\x01\n" +
	"\n" +
	"AnyChainTx\x127\n" +
	"\acardano\x18\x01 \x01(\v2\x1b.utxorpc.v1alpha.cardano.TxH\x00R\acardano\x12:\n" +
	"\x05block\x18\x02 \x01(\v2$.utxorpc.v1alpha.watch.AnyChainBlockR\x05blockB\a\n" +
	"\x05chain\"\x8f\x01\n" +
	"\x0fWatchTxResponse\x129\n" +
	"\x05apply\x18\x01 \x01(\v2!.utxorpc.v1alpha.watch.AnyChainTxH\x00R\x05apply\x127\n" +
	"\x04undo\x18\x02 \x01(\v2!.utxorpc.v1alpha.watch.AnyChainTxH\x00R\x04undoB\b\n" +
	"\x06action2j\n" +
	"\fWatchService\x12Z\n" +
	"\aWatchTx\x12%.utxorpc.v1alpha.watch.WatchTxRequest\x1a&.utxorpc.v1alpha.watch.WatchTxResponse0\x01B\xd2\x01\n" +
	"\x19com.utxorpc.v1alpha.watchB\n" +
	"WatchProtoP\x01Z3github.com/utxorpc/go-codegen/utxorpc/v1alpha/watch\xa2\x02\x03UVW\xaa\x02\x15Utxorpc.V1alpha.Watch\xca\x02\x15Utxorpc\\V1alpha\\Watch\xe2\x02!Utxorpc\\V1alpha\\Watch\\GPBMetadata\xea\x02\x17Utxorpc::V1alpha::Watchb\x06proto3"

var (
	file_utxorpc_v1alpha_watch_watch_proto_rawDescOnce sync.Once
	file_utxorpc_v1alpha_watch_watch_proto_rawDescData []byte
)

func file_utxorpc_v1alpha_watch_watch_proto_rawDescGZIP() []byte {
	file_utxorpc_v1alpha_watch_watch_proto_rawDescOnce.Do(func() {
		file_utxorpc_v1alpha_watch_watch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_utxorpc_v1alpha_watch_watch_proto_rawDesc), len(file_utxorpc_v1alpha_watch_watch_proto_rawDesc)))
	})
	return file_utxorpc_v1alpha_watch_watch_proto_rawDescData
}

var file_utxorpc_v1alpha_watch_watch_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_utxorpc_v1alpha_watch_watch_proto_goTypes = []any{
	(*BlockRef)(nil),              // 0: utxorpc.v1alpha.watch.BlockRef
	(*AnyChainBlock)(nil),         // 1: utxorpc.v1alpha.watch.AnyChainBlock
	(*AnyChainTxPattern)(nil),     // 2: utxorpc.v1alpha.watch.AnyChainTxPattern
	(*TxPredicate)(nil),           // 3: utxorpc.v1alpha.watch.TxPredicate
	(*WatchTxRequest)(nil),        // 4: utxorpc.v1alpha.watch.WatchTxRequest
	(*AnyChainTx)(nil),            // 5: utxorpc.v1alpha.watch.AnyChainTx
	(*WatchTxResponse)(nil),       // 6: utxorpc.v1alpha.watch.WatchTxResponse
	(*cardano.Block)(nil),         // 7: utxorpc.v1alpha.cardano.Block
	(*cardano.TxPattern)(nil),     // 8: utxorpc.v1alpha.cardano.TxPattern
	(*fieldmaskpb.FieldMask)(nil), // 9: google.protobuf.FieldMask
	(*cardano.Tx)(nil),            // 10: utxorpc.v1alpha.cardano.Tx
}
var file_utxorpc_v1alpha_watch_watch_proto_depIdxs = []int32{
	7,  // 0: utxorpc.v1alpha.watch.AnyChainBlock.cardano:type_name -> utxorpc.v1alpha.cardano.Block
	8,  // 1: utxorpc.v1alpha.watch.AnyChainTxPattern.cardano:type_name -> utxorpc.v1alpha.cardano.TxPattern
	2,  // 2: utxorpc.v1alpha.watch.TxPredicate.match:type_name -> utxorpc.v1alpha.watch.AnyChainTxPattern
	3,  // 3: utxorpc.v1alpha.watch.TxPredicate.not:type_name -> utxorpc.v1alpha.watch.TxPredicate
	3,  // 4: utxorpc.v1alpha.watch.TxPredicate.all_of:type_name -> utxorpc.v1alpha.watch.TxPredicate
	3,  // 5: utxorpc.v1alpha.watch.TxPredicate.any_of:type_name -> utxorpc.v1alpha.watch.TxPredicate
	3,  // 6: utxorpc.v1alpha.watch.WatchTxRequest.predicate:type_name -> utxorpc.v1alpha.watch.TxPredicate
	9,  // 7: utxorpc.v1alpha.watch.WatchTxRequest.field_mask:type_name -> google.protobuf.FieldMask
	0,  // 8: utxorpc.v1alpha.watch.WatchTxRequest.intersect:type_name -> utxorpc.v1alpha.watch.BlockRef
	10, // 9: utxorpc.v1alpha.watch.AnyChainTx.cardano:type_name -> utxorpc.v1alpha.cardano.Tx
	1,  // 10: utxorpc.v1alpha.watch.AnyChainTx.block:type_name -> utxorpc.v1alpha.watch.AnyChainBlock
	5,  // 11: utxorpc.v1alpha.watch.WatchTxResponse.apply:type_name -> utxorpc.v1alpha.watch.AnyChainTx
	5,  // 12: utxorpc.v1alpha.watch.WatchTxResponse.undo:type_name -> utxorpc.v1alpha.watch.AnyChainTx
	4,  // 13: utxorpc.v1alpha.watch.WatchService.WatchTx:input_type -> utxorpc.v1alpha.watch.WatchTxRequest
	6,  // 14: utxorpc.v1alpha.watch.WatchService.WatchTx:output_type -> utxorpc.v1alpha.watch.WatchTxResponse
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_utxorpc_v1alpha_watch_watch_proto_init() }
func file_utxorpc_v1alpha_watch_watch_proto_init() {
	if File_utxorpc_v1alpha_watch_watch_proto != nil {
		return
	}
	file_utxorpc_v1alpha_watch_watch_proto_msgTypes[1].OneofWrappers = []any{
		(*AnyChainBlock_Cardano)(nil),
	}
	file_utxorpc_v1alpha_watch_watch_proto_msgTypes[2].OneofWrappers = []any{
		(*AnyChainTxPattern_Cardano)(nil),
	}
	file_utxorpc_v1alpha_watch_watch_proto_msgTypes[5].OneofWrappers = []any{
		(*AnyChainTx_Cardano)(nil),
	}
	file_utxorpc_v1alpha_watch_watch_proto_msgTypes[6].OneofWrappers = []any{
		(*WatchTxResponse_Apply)(nil),
		(*WatchTxResponse_Undo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_utxorpc_v1alpha_watch_watch_proto_rawDesc), len(file_utxorpc_v1alpha_watch_watch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxorpc_v1alpha_watch_watch_proto_goTypes,
		DependencyIndexes: file_utxorpc_v1alpha_watch_watch_proto_depIdxs,
		MessageInfos:      file_utxorpc_v1alpha_watch_watch_proto_msgTypes,
	}.Build()
	File_utxorpc_v1alpha_watch_watch_proto = out.File
	file_utxorpc_v1alpha_watch_watch_proto_goTypes = nil
	file_utxorpc_v1alpha_watch_watch_proto_depIdxs = nil
}
