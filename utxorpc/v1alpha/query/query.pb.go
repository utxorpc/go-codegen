/// A consistent view of the state of the ledger

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: utxorpc/v1alpha/query/query.proto

package query

import (
	cardano "github.com/utxorpc/go-codegen/utxorpc/v1alpha/cardano"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a specific point in the blockchain.
type ChainPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"` // Slot number.
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`  // Block hash.
}

func (x *ChainPoint) Reset() {
	*x = ChainPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainPoint) ProtoMessage() {}

func (x *ChainPoint) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainPoint.ProtoReflect.Descriptor instead.
func (*ChainPoint) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{0}
}

func (x *ChainPoint) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ChainPoint) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Represents a reference to a transaction output
type TxoRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`    // Tx hash.
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Output index.
}

func (x *TxoRef) Reset() {
	*x = TxoRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxoRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxoRef) ProtoMessage() {}

func (x *TxoRef) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxoRef.ProtoReflect.Descriptor instead.
func (*TxoRef) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{1}
}

func (x *TxoRef) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *TxoRef) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Request to get the chain parameters
type ReadParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields in the parsed response.
}

func (x *ReadParamsRequest) Reset() {
	*x = ReadParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadParamsRequest) ProtoMessage() {}

func (x *ReadParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadParamsRequest.ProtoReflect.Descriptor instead.
func (*ReadParamsRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{2}
}

func (x *ReadParamsRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// An evenlope that holds parameter data from any of the compatible chains
type AnyChainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Params:
	//
	//	*AnyChainParams_Cardano
	Params isAnyChainParams_Params `protobuf_oneof:"params"`
}

func (x *AnyChainParams) Reset() {
	*x = AnyChainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainParams) ProtoMessage() {}

func (x *AnyChainParams) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainParams.ProtoReflect.Descriptor instead.
func (*AnyChainParams) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{3}
}

func (m *AnyChainParams) GetParams() isAnyChainParams_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *AnyChainParams) GetCardano() *cardano.PParams {
	if x, ok := x.GetParams().(*AnyChainParams_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyChainParams_Params interface {
	isAnyChainParams_Params()
}

type AnyChainParams_Cardano struct {
	Cardano *cardano.PParams `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"` // Cardano parameters
}

func (*AnyChainParams_Cardano) isAnyChainParams_Params() {}

// Response containing the chain parameters
type ReadParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values    *AnyChainParams `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`                        // The value of the parameters.
	LedgerTip *ChainPoint     `protobuf:"bytes,2,opt,name=ledger_tip,json=ledgerTip,proto3" json:"ledger_tip,omitempty"` // The chain point that represent the ledger current position.
}

func (x *ReadParamsResponse) Reset() {
	*x = ReadParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadParamsResponse) ProtoMessage() {}

func (x *ReadParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadParamsResponse.ProtoReflect.Descriptor instead.
func (*ReadParamsResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{4}
}

func (x *ReadParamsResponse) GetValues() *AnyChainParams {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ReadParamsResponse) GetLedgerTip() *ChainPoint {
	if x != nil {
		return x.LedgerTip
	}
	return nil
}

// An evenlope that holds an UTxO patterns from any of compatible chains
type AnyUtxoPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to UtxoPattern:
	//
	//	*AnyUtxoPattern_Cardano
	UtxoPattern isAnyUtxoPattern_UtxoPattern `protobuf_oneof:"utxo_pattern"`
}

func (x *AnyUtxoPattern) Reset() {
	*x = AnyUtxoPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyUtxoPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyUtxoPattern) ProtoMessage() {}

func (x *AnyUtxoPattern) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyUtxoPattern.ProtoReflect.Descriptor instead.
func (*AnyUtxoPattern) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{5}
}

func (m *AnyUtxoPattern) GetUtxoPattern() isAnyUtxoPattern_UtxoPattern {
	if m != nil {
		return m.UtxoPattern
	}
	return nil
}

func (x *AnyUtxoPattern) GetCardano() *cardano.TxOutputPattern {
	if x, ok := x.GetUtxoPattern().(*AnyUtxoPattern_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyUtxoPattern_UtxoPattern interface {
	isAnyUtxoPattern_UtxoPattern()
}

type AnyUtxoPattern_Cardano struct {
	Cardano *cardano.TxOutputPattern `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"`
}

func (*AnyUtxoPattern_Cardano) isAnyUtxoPattern_UtxoPattern() {}

// Represents a simple utxo predicate that can composed to create more complex ones
type UtxoPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match *AnyUtxoPattern  `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`              // Predicate is true if tx exhibits pattern.
	Not   []*UtxoPredicate `protobuf:"bytes,2,rep,name=not,proto3" json:"not,omitempty"`                  // Predicate is true if tx doesn't exhibit pattern.
	AllOf []*UtxoPredicate `protobuf:"bytes,3,rep,name=all_of,json=allOf,proto3" json:"all_of,omitempty"` // Predicate is true if utxo exhibits all of the patterns.
	AnyOf []*UtxoPredicate `protobuf:"bytes,4,rep,name=any_of,json=anyOf,proto3" json:"any_of,omitempty"` // Predicate is true if utxo exhibits any of the patterns.
}

func (x *UtxoPredicate) Reset() {
	*x = UtxoPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoPredicate) ProtoMessage() {}

func (x *UtxoPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoPredicate.ProtoReflect.Descriptor instead.
func (*UtxoPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{6}
}

func (x *UtxoPredicate) GetMatch() *AnyUtxoPattern {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *UtxoPredicate) GetNot() []*UtxoPredicate {
	if x != nil {
		return x.Not
	}
	return nil
}

func (x *UtxoPredicate) GetAllOf() []*UtxoPredicate {
	if x != nil {
		return x.AllOf
	}
	return nil
}

func (x *UtxoPredicate) GetAnyOf() []*UtxoPredicate {
	if x != nil {
		return x.AnyOf
	}
	return nil
}

// An evenlope that holds an UTxO from any of compatible chains
type AnyUtxoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NativeBytes []byte  `protobuf:"bytes,1,opt,name=native_bytes,json=nativeBytes,proto3" json:"native_bytes,omitempty"` // Original bytes as defined by the chain
	TxoRef      *TxoRef `protobuf:"bytes,2,opt,name=txo_ref,json=txoRef,proto3" json:"txo_ref,omitempty"`                // Hash of the previous transaction.
	// Types that are assignable to ParsedState:
	//
	//	*AnyUtxoData_Cardano
	ParsedState isAnyUtxoData_ParsedState `protobuf_oneof:"parsed_state"`
}

func (x *AnyUtxoData) Reset() {
	*x = AnyUtxoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyUtxoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyUtxoData) ProtoMessage() {}

func (x *AnyUtxoData) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyUtxoData.ProtoReflect.Descriptor instead.
func (*AnyUtxoData) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{7}
}

func (x *AnyUtxoData) GetNativeBytes() []byte {
	if x != nil {
		return x.NativeBytes
	}
	return nil
}

func (x *AnyUtxoData) GetTxoRef() *TxoRef {
	if x != nil {
		return x.TxoRef
	}
	return nil
}

func (m *AnyUtxoData) GetParsedState() isAnyUtxoData_ParsedState {
	if m != nil {
		return m.ParsedState
	}
	return nil
}

func (x *AnyUtxoData) GetCardano() *cardano.TxOutput {
	if x, ok := x.GetParsedState().(*AnyUtxoData_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyUtxoData_ParsedState interface {
	isAnyUtxoData_ParsedState()
}

type AnyUtxoData_Cardano struct {
	Cardano *cardano.TxOutput `protobuf:"bytes,3,opt,name=cardano,proto3,oneof"` // A cardano UTxO
}

func (*AnyUtxoData_Cardano) isAnyUtxoData_ParsedState() {}

// Request to get specific UTxOs
type ReadUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys      []*TxoRef              `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`                            // List of keys UTxOs.
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields.
}

func (x *ReadUtxosRequest) Reset() {
	*x = ReadUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUtxosRequest) ProtoMessage() {}

func (x *ReadUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUtxosRequest.ProtoReflect.Descriptor instead.
func (*ReadUtxosRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{8}
}

func (x *ReadUtxosRequest) GetKeys() []*TxoRef {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReadUtxosRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response containing the UTxOs associated with the requested addresses.
type ReadUtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*AnyUtxoData `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                          // List of UTxOs.
	LedgerTip *ChainPoint    `protobuf:"bytes,2,opt,name=ledger_tip,json=ledgerTip,proto3" json:"ledger_tip,omitempty"` // The chain point that represent the ledger current position.
}

func (x *ReadUtxosResponse) Reset() {
	*x = ReadUtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUtxosResponse) ProtoMessage() {}

func (x *ReadUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUtxosResponse.ProtoReflect.Descriptor instead.
func (*ReadUtxosResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{9}
}

func (x *ReadUtxosResponse) GetItems() []*AnyUtxoData {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ReadUtxosResponse) GetLedgerTip() *ChainPoint {
	if x != nil {
		return x.LedgerTip
	}
	return nil
}

// Request to search for UTxO based on a pattern.
type SearchUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Predicate  *UtxoPredicate         `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`                     // Pattern to match UTxOs by.
	FieldMask  *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`    // Field mask to selectively return fields.
	MaxItems   int32                  `protobuf:"varint,3,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`      // The maximum number of items to return.
	StartToken string                 `protobuf:"bytes,4,opt,name=start_token,json=startToken,proto3" json:"start_token,omitempty"` // The next_page_token value returned from a previous request, if any.
}

func (x *SearchUtxosRequest) Reset() {
	*x = SearchUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUtxosRequest) ProtoMessage() {}

func (x *SearchUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUtxosRequest.ProtoReflect.Descriptor instead.
func (*SearchUtxosRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{10}
}

func (x *SearchUtxosRequest) GetPredicate() *UtxoPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *SearchUtxosRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *SearchUtxosRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *SearchUtxosRequest) GetStartToken() string {
	if x != nil {
		return x.StartToken
	}
	return ""
}

// Response containing the UTxOs that match the requested addresses.
type SearchUtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*AnyUtxoData `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                          // List of UTxOs.
	LedgerTip *ChainPoint    `protobuf:"bytes,2,opt,name=ledger_tip,json=ledgerTip,proto3" json:"ledger_tip,omitempty"` // The chain point that represent the ledger current position.
	NextToken string         `protobuf:"bytes,3,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"` // Token to retrieve the next page of results, or empty if there are no more results.
}

func (x *SearchUtxosResponse) Reset() {
	*x = SearchUtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUtxosResponse) ProtoMessage() {}

func (x *SearchUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUtxosResponse.ProtoReflect.Descriptor instead.
func (*SearchUtxosResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{11}
}

func (x *SearchUtxosResponse) GetItems() []*AnyUtxoData {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchUtxosResponse) GetLedgerTip() *ChainPoint {
	if x != nil {
		return x.LedgerTip
	}
	return nil
}

func (x *SearchUtxosResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

// Request to get data (as in plural of datum)
type ReadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys      [][]byte               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields in the response.
}

func (x *ReadDataRequest) Reset() {
	*x = ReadDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDataRequest) ProtoMessage() {}

func (x *ReadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDataRequest.ProtoReflect.Descriptor instead.
func (*ReadDataRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{12}
}

func (x *ReadDataRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReadDataRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// An evenlope that holds a datum for any of the compatible chains
type AnyChainDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NativeBytes []byte `protobuf:"bytes,1,opt,name=native_bytes,json=nativeBytes,proto3" json:"native_bytes,omitempty"` // Original bytes as defined by the chain
	Key         []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to ParsedState:
	//
	//	*AnyChainDatum_Cardano
	ParsedState isAnyChainDatum_ParsedState `protobuf_oneof:"parsed_state"`
}

func (x *AnyChainDatum) Reset() {
	*x = AnyChainDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainDatum) ProtoMessage() {}

func (x *AnyChainDatum) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainDatum.ProtoReflect.Descriptor instead.
func (*AnyChainDatum) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{13}
}

func (x *AnyChainDatum) GetNativeBytes() []byte {
	if x != nil {
		return x.NativeBytes
	}
	return nil
}

func (x *AnyChainDatum) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (m *AnyChainDatum) GetParsedState() isAnyChainDatum_ParsedState {
	if m != nil {
		return m.ParsedState
	}
	return nil
}

func (x *AnyChainDatum) GetCardano() *cardano.PlutusData {
	if x, ok := x.GetParsedState().(*AnyChainDatum_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyChainDatum_ParsedState interface {
	isAnyChainDatum_ParsedState()
}

type AnyChainDatum_Cardano struct {
	Cardano *cardano.PlutusData `protobuf:"bytes,3,opt,name=cardano,proto3,oneof"` // A cardano UTxO
}

func (*AnyChainDatum_Cardano) isAnyChainDatum_ParsedState() {}

// Response containing data (as in plural of datum)
type ReadDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values    []*AnyChainDatum `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`                        // The value of each datum.
	LedgerTip *ChainPoint      `protobuf:"bytes,2,opt,name=ledger_tip,json=ledgerTip,proto3" json:"ledger_tip,omitempty"` // The chain point that represent the ledger current position.
}

func (x *ReadDataResponse) Reset() {
	*x = ReadDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDataResponse) ProtoMessage() {}

func (x *ReadDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_query_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDataResponse.ProtoReflect.Descriptor instead.
func (*ReadDataResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_query_query_proto_rawDescGZIP(), []int{14}
}

func (x *ReadDataResponse) GetValues() []*AnyChainDatum {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ReadDataResponse) GetLedgerTip() *ChainPoint {
	if x != nil {
		return x.LedgerTip
	}
	return nil
}

var File_utxorpc_v1alpha_query_query_proto protoreflect.FileDescriptor

var file_utxorpc_v1alpha_query_query_proto_rawDesc = []byte{
	0x0a, 0x21, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x32, 0x0a, 0x06, 0x54, 0x78, 0x6f,
	0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a,
	0x11, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x58, 0x0a,
	0x0e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x3c, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x50, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x42, 0x08, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x69, 0x70, 0x22,
	0x66, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x54, 0x78, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x74, 0x78, 0x6f, 0x5f,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x55, 0x74, 0x78, 0x6f,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x41, 0x6e, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52,
	0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x74, 0x78, 0x6f,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x3b,
	0x0a, 0x06, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x4f, 0x66, 0x12, 0x3b, 0x0a, 0x06, 0x61,
	0x6e, 0x79, 0x5f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x61, 0x6e, 0x79, 0x4f, 0x66, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x41, 0x6e, 0x79,
	0x55, 0x74, 0x78, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x74,
	0x78, 0x6f, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x78, 0x6f, 0x52, 0x65, 0x66, 0x52, 0x06, 0x74, 0x78, 0x6f,
	0x52, 0x65, 0x66, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x54,
	0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x78,
	0x6f, 0x52, 0x65, 0x66, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x55, 0x74,
	0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x41, 0x6e, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x54, 0x69, 0x70, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x6e, 0x79, 0x55, 0x74,
	0x78, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a,
	0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x69, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60,
	0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x95, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x75, 0x6d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x69, 0x70, 0x32, 0x94, 0x03,
	0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x28, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x27,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x12, 0x29, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55,
	0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xd2, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0xa2, 0x02, 0x03, 0x55, 0x56, 0x51, 0xaa, 0x02, 0x15, 0x55, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0xca, 0x02, 0x15, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x51, 0x75, 0x65, 0x72, 0x79, 0xe2, 0x02, 0x21, 0x55, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x17, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3a, 0x3a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_utxorpc_v1alpha_query_query_proto_rawDescOnce sync.Once
	file_utxorpc_v1alpha_query_query_proto_rawDescData = file_utxorpc_v1alpha_query_query_proto_rawDesc
)

func file_utxorpc_v1alpha_query_query_proto_rawDescGZIP() []byte {
	file_utxorpc_v1alpha_query_query_proto_rawDescOnce.Do(func() {
		file_utxorpc_v1alpha_query_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxorpc_v1alpha_query_query_proto_rawDescData)
	})
	return file_utxorpc_v1alpha_query_query_proto_rawDescData
}

var file_utxorpc_v1alpha_query_query_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_utxorpc_v1alpha_query_query_proto_goTypes = []any{
	(*ChainPoint)(nil),              // 0: utxorpc.v1alpha.query.ChainPoint
	(*TxoRef)(nil),                  // 1: utxorpc.v1alpha.query.TxoRef
	(*ReadParamsRequest)(nil),       // 2: utxorpc.v1alpha.query.ReadParamsRequest
	(*AnyChainParams)(nil),          // 3: utxorpc.v1alpha.query.AnyChainParams
	(*ReadParamsResponse)(nil),      // 4: utxorpc.v1alpha.query.ReadParamsResponse
	(*AnyUtxoPattern)(nil),          // 5: utxorpc.v1alpha.query.AnyUtxoPattern
	(*UtxoPredicate)(nil),           // 6: utxorpc.v1alpha.query.UtxoPredicate
	(*AnyUtxoData)(nil),             // 7: utxorpc.v1alpha.query.AnyUtxoData
	(*ReadUtxosRequest)(nil),        // 8: utxorpc.v1alpha.query.ReadUtxosRequest
	(*ReadUtxosResponse)(nil),       // 9: utxorpc.v1alpha.query.ReadUtxosResponse
	(*SearchUtxosRequest)(nil),      // 10: utxorpc.v1alpha.query.SearchUtxosRequest
	(*SearchUtxosResponse)(nil),     // 11: utxorpc.v1alpha.query.SearchUtxosResponse
	(*ReadDataRequest)(nil),         // 12: utxorpc.v1alpha.query.ReadDataRequest
	(*AnyChainDatum)(nil),           // 13: utxorpc.v1alpha.query.AnyChainDatum
	(*ReadDataResponse)(nil),        // 14: utxorpc.v1alpha.query.ReadDataResponse
	(*fieldmaskpb.FieldMask)(nil),   // 15: google.protobuf.FieldMask
	(*cardano.PParams)(nil),         // 16: utxorpc.v1alpha.cardano.PParams
	(*cardano.TxOutputPattern)(nil), // 17: utxorpc.v1alpha.cardano.TxOutputPattern
	(*cardano.TxOutput)(nil),        // 18: utxorpc.v1alpha.cardano.TxOutput
	(*cardano.PlutusData)(nil),      // 19: utxorpc.v1alpha.cardano.PlutusData
}
var file_utxorpc_v1alpha_query_query_proto_depIdxs = []int32{
	15, // 0: utxorpc.v1alpha.query.ReadParamsRequest.field_mask:type_name -> google.protobuf.FieldMask
	16, // 1: utxorpc.v1alpha.query.AnyChainParams.cardano:type_name -> utxorpc.v1alpha.cardano.PParams
	3,  // 2: utxorpc.v1alpha.query.ReadParamsResponse.values:type_name -> utxorpc.v1alpha.query.AnyChainParams
	0,  // 3: utxorpc.v1alpha.query.ReadParamsResponse.ledger_tip:type_name -> utxorpc.v1alpha.query.ChainPoint
	17, // 4: utxorpc.v1alpha.query.AnyUtxoPattern.cardano:type_name -> utxorpc.v1alpha.cardano.TxOutputPattern
	5,  // 5: utxorpc.v1alpha.query.UtxoPredicate.match:type_name -> utxorpc.v1alpha.query.AnyUtxoPattern
	6,  // 6: utxorpc.v1alpha.query.UtxoPredicate.not:type_name -> utxorpc.v1alpha.query.UtxoPredicate
	6,  // 7: utxorpc.v1alpha.query.UtxoPredicate.all_of:type_name -> utxorpc.v1alpha.query.UtxoPredicate
	6,  // 8: utxorpc.v1alpha.query.UtxoPredicate.any_of:type_name -> utxorpc.v1alpha.query.UtxoPredicate
	1,  // 9: utxorpc.v1alpha.query.AnyUtxoData.txo_ref:type_name -> utxorpc.v1alpha.query.TxoRef
	18, // 10: utxorpc.v1alpha.query.AnyUtxoData.cardano:type_name -> utxorpc.v1alpha.cardano.TxOutput
	1,  // 11: utxorpc.v1alpha.query.ReadUtxosRequest.keys:type_name -> utxorpc.v1alpha.query.TxoRef
	15, // 12: utxorpc.v1alpha.query.ReadUtxosRequest.field_mask:type_name -> google.protobuf.FieldMask
	7,  // 13: utxorpc.v1alpha.query.ReadUtxosResponse.items:type_name -> utxorpc.v1alpha.query.AnyUtxoData
	0,  // 14: utxorpc.v1alpha.query.ReadUtxosResponse.ledger_tip:type_name -> utxorpc.v1alpha.query.ChainPoint
	6,  // 15: utxorpc.v1alpha.query.SearchUtxosRequest.predicate:type_name -> utxorpc.v1alpha.query.UtxoPredicate
	15, // 16: utxorpc.v1alpha.query.SearchUtxosRequest.field_mask:type_name -> google.protobuf.FieldMask
	7,  // 17: utxorpc.v1alpha.query.SearchUtxosResponse.items:type_name -> utxorpc.v1alpha.query.AnyUtxoData
	0,  // 18: utxorpc.v1alpha.query.SearchUtxosResponse.ledger_tip:type_name -> utxorpc.v1alpha.query.ChainPoint
	15, // 19: utxorpc.v1alpha.query.ReadDataRequest.field_mask:type_name -> google.protobuf.FieldMask
	19, // 20: utxorpc.v1alpha.query.AnyChainDatum.cardano:type_name -> utxorpc.v1alpha.cardano.PlutusData
	13, // 21: utxorpc.v1alpha.query.ReadDataResponse.values:type_name -> utxorpc.v1alpha.query.AnyChainDatum
	0,  // 22: utxorpc.v1alpha.query.ReadDataResponse.ledger_tip:type_name -> utxorpc.v1alpha.query.ChainPoint
	2,  // 23: utxorpc.v1alpha.query.QueryService.ReadParams:input_type -> utxorpc.v1alpha.query.ReadParamsRequest
	8,  // 24: utxorpc.v1alpha.query.QueryService.ReadUtxos:input_type -> utxorpc.v1alpha.query.ReadUtxosRequest
	10, // 25: utxorpc.v1alpha.query.QueryService.SearchUtxos:input_type -> utxorpc.v1alpha.query.SearchUtxosRequest
	12, // 26: utxorpc.v1alpha.query.QueryService.ReadData:input_type -> utxorpc.v1alpha.query.ReadDataRequest
	4,  // 27: utxorpc.v1alpha.query.QueryService.ReadParams:output_type -> utxorpc.v1alpha.query.ReadParamsResponse
	9,  // 28: utxorpc.v1alpha.query.QueryService.ReadUtxos:output_type -> utxorpc.v1alpha.query.ReadUtxosResponse
	11, // 29: utxorpc.v1alpha.query.QueryService.SearchUtxos:output_type -> utxorpc.v1alpha.query.SearchUtxosResponse
	14, // 30: utxorpc.v1alpha.query.QueryService.ReadData:output_type -> utxorpc.v1alpha.query.ReadDataResponse
	27, // [27:31] is the sub-list for method output_type
	23, // [23:27] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_utxorpc_v1alpha_query_query_proto_init() }
func file_utxorpc_v1alpha_query_query_proto_init() {
	if File_utxorpc_v1alpha_query_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utxorpc_v1alpha_query_query_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChainPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TxoRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReadParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AnyChainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ReadParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AnyUtxoPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UtxoPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AnyUtxoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SearchUtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AnyChainDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_query_query_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_utxorpc_v1alpha_query_query_proto_msgTypes[3].OneofWrappers = []any{
		(*AnyChainParams_Cardano)(nil),
	}
	file_utxorpc_v1alpha_query_query_proto_msgTypes[5].OneofWrappers = []any{
		(*AnyUtxoPattern_Cardano)(nil),
	}
	file_utxorpc_v1alpha_query_query_proto_msgTypes[7].OneofWrappers = []any{
		(*AnyUtxoData_Cardano)(nil),
	}
	file_utxorpc_v1alpha_query_query_proto_msgTypes[13].OneofWrappers = []any{
		(*AnyChainDatum_Cardano)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxorpc_v1alpha_query_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxorpc_v1alpha_query_query_proto_goTypes,
		DependencyIndexes: file_utxorpc_v1alpha_query_query_proto_depIdxs,
		MessageInfos:      file_utxorpc_v1alpha_query_query_proto_msgTypes,
	}.Build()
	File_utxorpc_v1alpha_query_query_proto = out.File
	file_utxorpc_v1alpha_query_query_proto_rawDesc = nil
	file_utxorpc_v1alpha_query_query_proto_goTypes = nil
	file_utxorpc_v1alpha_query_query_proto_depIdxs = nil
}
